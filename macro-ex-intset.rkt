#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 62 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 4213 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; Write a macro `integer-ranges-predicate` that takes a sequence of"
 #" closed"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; range declarations and produces a predicate that tests whether a "
 #"given number"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";; is in any of the ranges. See the examples for the syntax."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; ------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; v1: Get a simple version working."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 24 3 2 #" ("
0 0 14 3 24 #"integer-ranges-predicate"
0 0 24 3 2 #" ["
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #"] "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 15 3 6 #"for/or"
0 0 24 3 3 #" (["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ["
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"end"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"small-composite?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 24 #"integer-ranges-predicate"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 2 #"28"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 18 #"math/number-theory"
0 0 24 3 1 #" "
0 0 14 3 6 #"prime?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"number ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"prime?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"ascii-alphanum?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 24 #"integer-ranges-predicate"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"57"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 3 #"128"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"character ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"ascii-alphanum?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 16 #"char-alphabetic?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 13 #"char-numeric?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; ------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; v2: Generate code that creates a run-time data structure and uses"
 #" a run-time"
) 0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; function to implement its behavior. Your function should perform "
 #"O(log k)"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; comparisons, where k is the number of ranges. (Specifically, you "
 #"should use"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";; some sort of binary search.)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; You may assume that the ranges are non-overlapping and in ascendi"
 #"ng"
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";; order. (But think about how you would change your macro if you co"
 #"uld not make"
) 0 0 24 29 1 #"\n"
0 0 17 3 20 #";; that assumption.)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; No new examples."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #"; [4 4] [6 6] [8 10] [12 12]"
0 0 24 29 1 #"\n"
0 0 17 3 4 #"; =>"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";'((8 . 10) ((6 . 6) (4 . 4) ()) (12 . 12))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-syntax-rule"
0 0 24 3 2 #" ("
0 0 14 3 27 #"integer-ranges-predicate-v2"
0 0 24 3 2 #" ["
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #"] "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 28 #"integer-ranges-predicate-v2*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"(("
0 0 14 3 5 #"start"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 3 #"end"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"integer-ranges-predicate-v2*"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"letrec"
0 0 24 3 3 #" (["
0 0 14 3 9 #"cons-tree"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"len"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 14 3 2 #"rs"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                  [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 4 #"rs-l"
0 0 24 3 1 #" "
0 0 14 3 4 #"rs-r"
0 0 24 3 3 #") ("
0 0 14 3 8 #"split-at"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 2 #" ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rs-r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"cons-tree"
0 0 24 3 1 #" "
0 0 14 3 4 #"rs-l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 9 #"cons-tree"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 4 #"rs-r"
0 0 24 3 10 #"))))])))])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 19 #"int-ranges-pred-fun"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"cons-tree"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"int-ranges-pred-fun"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 3 #"lhs"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 3 #") ("
0 0 14 3 19 #"int-ranges-pred-fun"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"lhs"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 19 #"int-ranges-pred-fun"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"rhs"
0 0 24 3 4 #")])]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"small-composite1?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v2"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"small-composite1?"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"small-composite1?"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"small-composite1?"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"small-composite2?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 2 #"28"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 18 #"math/number-theory"
0 0 24 3 1 #" "
0 0 14 3 6 #"prime?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"number ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"small-composite2?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"prime?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";(define bad-range?"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";  (integer-ranges-predicate-v3"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";   [4 4] [6 6] [8 10] [12 \"adadd\"] [14 16] [18 18] [20 22] [24 28"
 #"]))"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 16 #"ascii-alphanum1?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"57"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 3 #"128"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"character ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"ascii-alphanum1?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 16 #"char-alphabetic?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 13 #"char-numeric?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; ------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; v3: Generate code that minimizes (or nearly minimizes) the number"
 #" of comparisons"
) 0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; performed. Specifically, the generated code should do binary sear"
 #"ch via a tree"
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";; of `if` expressions (not by traversing a data structure)."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; You may assume that the ranges are non-overlapping and in ascendi"
 #"ng order."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; No new examples."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 10 #"for-syntax"
0 0 24 3 1 #" "
0 0 14 3 12 #"syntax/parse"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 10 #"for-syntax"
0 0 24 3 2 #" ("
0 0 14 3 9 #"except-in"
0 0 24 3 1 #" "
0 0 14 3 6 #"racket"
0 0 24 3 1 #" "
0 0 14 3 5 #"range"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 16 #"begin-for-syntax"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"helper.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 44 #"; code-gen-v3 : (list of range) id -> syntax"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"code-gen-v3"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 37 #";(printf \"ranges equals ~e\\n\" ranges)"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 11 #"with-syntax"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 11 #"let*-values"
0 0 24 3 4 #" ([("
0 0 14 3 3 #"len"
0 0 24 3 3 #") ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 4 #"#'#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 15 3 11 #"with-syntax"
0 0 24 3 3 #" (["
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 9 #"range-low"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ["
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 10 #"range-high"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 2 #"#'"
0 0 24 3 1 #"("
0 0 14 3 2 #"<="
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 15 3 10 #"let-values"
0 0 24 3 4 #" ([("
0 0 14 3 4 #"rs-l"
0 0 24 3 1 #" "
0 0 14 3 4 #"rs-r"
0 0 24 3 3 #") ("
0 0 14 3 8 #"split-at"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 2 #" ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 11 #"with-syntax"
0 0 24 3 3 #" (["
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 9 #"range-low"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"rs-r"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 11 #"code-gen-v3"
0 0 24 3 1 #" "
0 0 14 3 4 #"rs-l"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 11 #"code-gen-v3"
0 0 24 3 1 #" "
0 0 14 3 4 #"rs-r"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 1 #"x"
0 0 24 3 10 #"))))])))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 2 #" ("
0 0 14 3 27 #"integer-ranges-predicate-v3"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 19 #"define-syntax-class"
0 0 24 3 1 #" "
0 0 14 3 5 #"Range"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"pattern"
0 0 24 3 2 #" ["
0 0 14 3 9 #"start:nat"
0 0 24 3 1 #" "
0 0 14 3 7 #"end:nat"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 23 3 6 #"#:attr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ast"
0 0 24 3 2 #" ("
0 0 14 3 5 #"range"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 5 #"start"
0 0 24 3 3 #") ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"end"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"pattern"
0 0 24 3 1 #" "
0 0 14 3 7 #"num:nat"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:attr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ast"
0 0 24 3 2 #" ("
0 0 14 3 5 #"range"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"num"
0 0 24 3 3 #") ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"num"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-parse"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 7 #"r:Range"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 11 #"code-gen-v3"
0 0 24 3 2 #" ("
0 0 14 3 9 #"attribute"
0 0 24 3 1 #" "
0 0 14 3 5 #"r.ast"
0 0 24 3 2 #") "
0 0 21 3 2 #"#'"
0 0 14 3 1 #"x"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"small-composite1-v3?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"small-composite1-v3?"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"small-composite1-v3?"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"small-composite1-v3?"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"small-composite2-v3?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 2 #"28"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 18 #"math/number-theory"
0 0 24 3 1 #" "
0 0 14 3 6 #"prime?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"number ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"small-composite2-v3?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"prime?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"ascii-alphanum1-v3?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"57"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 3 #"128"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"character ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ascii-alphanum1-v3?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 16 #"char-alphabetic?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 13 #"char-numeric?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; ------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; v4: Expand the macro to allow overlapping and out-of-order ranges"
 #". Also,"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; extend the macro to handle singleton ranges written as a single n"
 #"umeric"
) 0 0 24 29 1 #"\n"
0 0 17 3 12 #";; constant."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";(define-syntax-rule (integer-ranges-predicate-v4 [start end] ...)"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";  (lambda (x)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";    (integer-ranges-predicate-v4* #f x [start end] ...)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 16 #"begin-for-syntax"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 38 #"; a closed interval of natural numbers"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 26 #";(struct range (low high))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 44 #"; code-gen-v4 : (list of range) id -> syntax"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"code-gen-v4"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 37 #";(printf \"ranges equals ~e\\n\" ranges)"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 11 #"code-gen-v3"
0 0 24 3 2 #" ("
0 0 14 3 24 #"sort-and-remove-overlaps"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 2 #") "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 2 #" ("
0 0 14 3 27 #"integer-ranges-predicate-v4"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 19 #"define-syntax-class"
0 0 24 3 1 #" "
0 0 14 3 5 #"Range"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"pattern"
0 0 24 3 2 #" ["
0 0 14 3 9 #"start:nat"
0 0 24 3 1 #" "
0 0 14 3 7 #"end:nat"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 23 3 6 #"#:attr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ast"
0 0 24 3 2 #" ("
0 0 14 3 5 #"range"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 5 #"start"
0 0 24 3 3 #") ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"end"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"pattern"
0 0 24 3 1 #" "
0 0 14 3 7 #"num:nat"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:attr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ast"
0 0 24 3 2 #" ("
0 0 14 3 5 #"range"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"num"
0 0 24 3 3 #") ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"num"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-parse"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 7 #"r:Range"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 11 #"code-gen-v4"
0 0 24 3 2 #" ("
0 0 14 3 9 #"attribute"
0 0 24 3 1 #" "
0 0 14 3 5 #"r.ast"
0 0 24 3 2 #") "
0 0 21 3 2 #"#'"
0 0 14 3 1 #"x"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"(define-syntax (integer-r"
0 0 17 3 24 #"anges-predicate-v4* stx)"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"  (syntax-case stx ()"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"    [(_ if-tree x) #'if-tree]"
0 0 17 29 1 #"\n"
0 0 17 3 34 #"    [(_ if-tree x [start end] ...)"
0 0 17 29 1 #"\n"
0 0 17 3 55 #"     (let* ([ranges (syntax->list #'([start end] ...))]"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"            [rest (cdr ranges)])"
0 0 17 29 1 #"\n"
0 0 17 3 42 #"       (with-syntax ([[s e] (car ranges)])"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"         (le"
0 0 17 3 4 #"trec"
0 0 17 29 1 #"\n"
0 0 17 3 27 #"             ([cons-if-tree"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"               (lambda (if-t)"
0 0 17 29 1 #"\n"
0 0 17 3 48 #"                 (let* ([if-t-e (syntax-e if-t)]"
0 0 17 29 1 #"\n"
0 0 17 3 73
(
 #"                        [new-if #'(if (<= s x e) #t (if (< x s) #f #"
 #"f))])"
) 0 0 17 29 1 #"\n"
0 0 17 3 37 #"                   (if (list? if-t-e)"
0 0 17 29 1 #"\n"
0 0 17 3 32 #"                       (let*-val"
0 0 17 3 64
#"ues ([(if-stx cond-stx then-stx else-stx) (apply values if-t-e)]"
0 0 17 29 1 #"\n"
0 0 17 3 84
(
 #"                                     [(s*) (eval-syntax (cadr (synta"
 #"x-e cond-stx)))]"
) 0 0 17 29 1 #"\n"
0 0 17 3 71
(
 #"                                     [(else-stx-e) (syntax-e else-st"
 #"x)]"
) 0 0 17 29 1 #"\n"
0 0 17 3 75
(
 #"                                     [(new-else-stx) (if (list? else"
 #"-stx-e)"
) 0 0 17 29 1 #"\n"
0 0 17 3 107
(
 #"                                                      (let-values (["
 #"(if-stx* cond-stx* then-stx* else-stx*)"
) 0 0 17 29 1 #"\n"
0 0 17 3 95
(
 #"                                                                    "
 #"(apply values else-stx-e)])"
) 0 0 17 29 1 #"\n"
0 0 17 3 10 #"          "
0 0 17 3 74
(
 #"                                              (if (< (eval-syntax #'"
 #"e) s*)"
) 0 0 17 29 1 #"\n"
0 0 17 3 117
(
 #"                                                            #`(if #,"
 #"cond-stx* #,(cons-if-tree then-stx*) #,else-stx*)"
) 0 0 17 29 1 #"\n"
0 0 17 3 63
#"                                                            #`("
0 0 17 3 56 #"if #,cond-stx* #,then-stx* #,(cons-if-tree else-stx*))))"
0 0 17 29 1 #"\n"
0 0 17 3 63
#"                                                      new-if)])"
0 0 17 29 1 #"\n"
0 0 17 3 69
(
 #"                         #`(if #,cond-stx #,then-stx #,new-else-stx)"
 #")"
) 0 0 17 29 1 #"\n"
0 0 17 3 34 #"                       new-if)))])"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"           #`(integer-ranges-p"
0 0 17 3 56 #"redicate-v4* #,(cons-if-tree #'if-tree) x #,@rest))))]))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"small-composite1-v4?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"9"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"small-composite1-v4?"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"small-composite1-v4?"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"small-composite1-v4?"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 16 #"small-composite?"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"small-composite2-v4?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"6"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 3 #"] ["
0 0 21 3 1 #"8"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"14"
0 0 24 3 1 #" "
0 0 21 3 2 #"16"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"18"
0 0 24 3 1 #" "
0 0 21 3 2 #"18"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"22"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"24"
0 0 24 3 1 #" "
0 0 21 3 2 #"28"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 2 #" ("
0 0 14 3 7 #"only-in"
0 0 24 3 1 #" "
0 0 14 3 18 #"math/number-theory"
0 0 24 3 1 #" "
0 0 14 3 6 #"prime?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"number ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 20 #"small-composite2-v4?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"prime?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"ascii-alphanum1-v4?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"57"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 3 #"128"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"character ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ascii-alphanum1-v4?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 16 #"char-alphabetic?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 13 #"char-numeric?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"ascii-alphanum2-v4?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"57"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"ascii-alphanum3-v4?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"57"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 19 #"ascii-alphanum2-v3?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v3"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"65"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 3 #"128"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"character ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ascii-alphanum2-v4?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 16 #"char-alphabetic?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 13 #"char-numeric?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 3 #"128"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"test-case"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"character ~s\""
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"ascii-alphanum3-v4?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 19 #"ascii-alphanum2-v3?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 26 #"unassigned-in-unicode-3.2?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v3"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0221"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0234"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x024F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x02AE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x02AF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x02EF"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x02FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0350"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x035F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0370"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0373"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0376"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0379"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x037B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x037D"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x037F"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0383"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x038B"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x038D"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x03A2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x03CF"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x03F7"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x03FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0487"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x04CF"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x04F6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x04F7"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x04FA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x04FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0510"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0530"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0557"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0558"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0560"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0588"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x058B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0590"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x05A2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x05BA"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x05C5"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x05CF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x05EB"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x05EF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x05F5"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x060B"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x060D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x061A"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x061C"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x061E"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0620"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x063B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x063F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0656"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x065F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x06EE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x06EF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x06FF"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x070E"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x072D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x072F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x074B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x077F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x07B2"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0900"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0904"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x093A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x093B"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x094E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x094F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0955"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0957"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0971"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0980"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0984"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x098D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x098E"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0991"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0992"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x09A9"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x09B1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x09B3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x09B5"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x09BA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x09BB"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x09BD"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x09C5"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x09C6"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x09C9"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x09CA"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x09CE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x09D6"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x09D8"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x09DB"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x09DE"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x09E4"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x09E5"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x09FB"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A01"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A03"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A04"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A0B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A0E"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A11"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A12"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A29"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A31"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A34"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A37"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A3A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A3B"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A3D"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A43"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A46"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A49"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A4A"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A4E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A58"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A5D"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A5F"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A65"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0A75"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0A80"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A84"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A8C"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A8E"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0A92"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0AA9"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0AB1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0AB4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0ABA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0ABB"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0AC6"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0ACA"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0ACE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0ACF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0AD1"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0ADF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0AE1"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0AE5"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0AF0"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B00"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0B04"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B0D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B0E"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B11"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B12"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0B29"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0B31"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B34"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B35"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B3A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B3B"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B44"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B46"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B49"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B4A"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B4E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B55"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B58"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B5B"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0B5E"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B62"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B65"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B71"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B81"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0B84"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B8B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B8D"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0B91"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0B96"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0B98"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0B9B"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0B9D"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0BA0"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0BA2"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0BA5"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0BA7"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0BAB"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0BAD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0BB6"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0BBA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0BBD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0BC3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0BC5"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0BC9"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0BCE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0BD6"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0BD8"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0BE6"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0BF3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0C00"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C04"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C0D"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C11"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C29"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C34"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0C3A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0C3D"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C45"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C49"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0C4E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0C54"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0C57"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0C5F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0C62"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0C65"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0C70"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0C81"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C84"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C8D"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0C91"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0CA9"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0CB4"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0CBA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0CBD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0CC5"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0CC9"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0CCE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0CD4"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0CD7"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0CDD"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0CDF"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0CE2"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0CE5"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0CF0"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0D01"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0D04"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0D0D"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0D11"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0D29"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0D3A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0D3D"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0D44"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0D45"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0D49"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0D4E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0D56"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0D58"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0D5F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0D62"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0D65"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0D70"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0D81"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0D84"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0D97"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0D99"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0DB2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0DBC"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0DBE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0DBF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0DC7"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0DC9"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0DCB"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0DCE"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0DD5"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0DD7"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0DE0"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0DF1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0DF5"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0E00"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0E3B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0E3E"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0E5C"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0E80"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0E83"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0E85"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0E86"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0E89"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0E8B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0E8C"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0E8E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0E93"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0E98"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0EA0"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0EA4"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0EA6"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0EA8"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0EA9"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0EAC"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0EBA"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0EBE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0EBF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0EC5"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0EC7"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0ECE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0ECF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0EDA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0EDB"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0EDE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0EFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0F48"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0F6B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0F70"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0F8C"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0F8F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0F98"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x0FBD"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0FCD"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0FCE"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x0FD0"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x0FFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1022"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1028"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x102B"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1033"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1035"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x103A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x103F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x105A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x109F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x10C6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x10CF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x10F9"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x10FA"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x10FC"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x10FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x115A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x115E"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x11A3"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x11A7"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x11FA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x11FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1207"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1247"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1249"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x124E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x124F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1257"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1259"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x125E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x125F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1287"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1289"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x128E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x128F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x12AF"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x12B1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x12B6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x12B7"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x12BF"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x12C1"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x12C6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x12C7"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x12CF"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x12D7"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x12EF"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x130F"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1311"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1316"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1317"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x131F"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1347"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x135B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1360"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x137D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x139F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x13F5"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1400"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1677"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x167F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x169D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x169F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x16F1"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x16FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x170D"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1715"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x171F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1737"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x173F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1754"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x175F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x176D"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1771"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1774"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x177F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x17DD"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x17DF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x17EA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x17FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x180F"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x181A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x181F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1878"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x187F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x18AA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1DFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1E9C"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1E9F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1EFA"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1EFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1F16"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1F17"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1F1E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1F1F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1F46"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1F47"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1F4E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1F4F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1F58"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1F5A"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1F5C"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1F5E"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1F7E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1F7F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1FB5"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1FC5"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1FD4"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1FD5"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1FDC"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x1FF0"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x1FF1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1FF5"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x1FFF"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2053"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2056"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2058"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x205E"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2064"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2069"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2072"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2073"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x208F"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x209F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x20B2"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x20CF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x20EB"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x20FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x213B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x213C"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x214C"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2152"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2184"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x218F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x23CF"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x23FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2427"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x243F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x244B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x245F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x24FF"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2614"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2615"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x2618"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x267E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x267F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x268A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2700"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x2705"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x270A"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x270B"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x2728"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x274C"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x274E"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2753"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2755"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x2757"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x275F"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2760"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2795"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2797"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x27B0"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x27BF"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x27CF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x27EC"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x27EF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2B00"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2E7F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x2E9A"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2EF4"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2EFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2FD6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2FEF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x2FFC"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x2FFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x3040"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x3097"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x3098"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x3100"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x3104"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x312D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x3130"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x318F"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x31B8"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x31EF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x321D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x321F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x3244"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x3250"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x327C"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x327E"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x32CC"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x32CF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x32FF"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x3377"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x337A"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x33DE"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x33DF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#x33FF"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x4DB6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x4DFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#x9FA6"
0 0 24 3 1 #" "
0 0 21 3 6 #"#x9FFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xA48D"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xA48F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xA4C7"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xABFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xD7A4"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xD7FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFA2E"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFA2F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFA6B"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFAFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFB07"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFB12"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFB18"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFB1C"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFB37"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFB3D"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFB3F"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFB42"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFB45"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFBB2"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFBD2"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFD40"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFD4F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFD90"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFD91"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFDC8"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFDCF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFDFD"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFDFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFE10"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFE1F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFE24"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFE2F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFE47"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFE48"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFE53"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFE67"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFE6C"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFE6F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFE75"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFEFD"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFEFE"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFF00"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFFBF"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFFC1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFFC8"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFFC9"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFFD0"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFFD1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFFD8"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFFD9"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFFDD"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFFDF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 6 #"#xFFE7"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 6 #"#xFFEF"
0 0 24 3 1 #" "
0 0 21 3 6 #"#xFFF8"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x10000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x102FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1031F"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x10324"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1032F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1034B"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x103FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x10426"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x10427"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1044E"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1CFFF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D0F6"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D0FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D127"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D129"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D1DE"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D3FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D455"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D49D"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D4A0"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D4A1"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D4A3"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D4A4"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D4A7"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D4A8"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D4AD"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D4BA"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D4BC"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D4C1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D4C4"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D506"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D50B"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D50C"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D515"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D51D"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D53A"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D53F"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D545"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D547"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D549"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#x1D551"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D6A4"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D6A7"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D7CA"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1D7CD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x1D800"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x1FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x2A6D7"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x2F7FF"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x2FA1E"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x2FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x30000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x3FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x40000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x4FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x50000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x5FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x60000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x6FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x70000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x7FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x80000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x8FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#x90000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#x9FFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#xA0000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#xAFFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#xB0000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#xBFFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#xC0000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#xCFFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#xD0000"
0 0 24 3 1 #" "
0 0 21 3 7 #"#xDFFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 7 #"#xE0000"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#xE0002"
0 0 24 3 1 #" "
0 0 21 3 7 #"#xE001F"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ["
0 0 21 3 7 #"#xE0080"
0 0 24 3 1 #" "
0 0 21 3 7 #"#xEFFFD"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; ------------------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; v5: Add `define-integer-set` form, and allow integer set referenc"
 #"es as ranges."
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; If the macro receives an identifier that was not defined using"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; `define-integer-set`, it should raise an error at compile time sp"
 #"ecifically"
) 0 0 24 29 1 #"\n"
0 0 17 3 13 #";; saying so."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 16 #"begin-for-syntax"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 19 #"define-syntax-class"
0 0 24 3 1 #" "
0 0 14 3 5 #"Range"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"pattern"
0 0 24 3 2 #" ["
0 0 14 3 9 #"start:nat"
0 0 24 3 1 #" "
0 0 14 3 7 #"end:nat"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 23 3 6 #"#:attr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ast"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"range"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 5 #"start"
0 0 24 3 3 #") ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"end"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"pattern"
0 0 24 3 1 #" "
0 0 14 3 7 #"num:nat"
0 0 24 3 1 #" "
0 0 23 3 6 #"#:attr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ast"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 5 #"range"
0 0 24 3 2 #" ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"num"
0 0 24 3 3 #") ("
0 0 14 3 13 #"syntax->datum"
0 0 24 3 1 #" "
0 0 21 3 2 #"#'"
0 0 14 3 3 #"num"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"pattern"
0 0 24 3 2 #" ("
0 0 14 3 4 #"~var"
0 0 24 3 1 #" "
0 0 14 3 7 #"int-set"
0 0 24 3 2 #" ("
0 0 14 3 6 #"static"
0 0 24 3 1 #" "
0 0 14 3 5 #"list?"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"integer set\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 23 3 6 #"#:attr"
0 0 24 3 1 #" "
0 0 14 3 3 #"ast"
0 0 24 3 2 #" ("
0 0 14 3 9 #"attribute"
0 0 24 3 1 #" "
0 0 14 3 13 #"int-set.value"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 2 #";("
0 0 17 3 18 #"pattern int-set:id"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 10 #";         "
0 0 17 3 6 #"#:attr"
0 0 17 3 1 #" "
0 0 17 3 23 #"ast (syntax-local-value"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #";                     "
0 0 17 3 2 #"#'"
0 0 17 3 7 #"int-set"
0 0 17 3 2 #" ("
0 0 17 3 6 #"lambda"
0 0 17 3 8 #" () #f))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 10 #";         "
0 0 17 3 13 #"#:fail-unless"
0 0 17 3 2 #" ("
0 0 17 3 9 #"attribute"
0 0 17 3 1 #" "
0 0 17 3 3 #"ast"
0 0 17 3 3 #") \""
0 0 17 3 4 #"name"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"not"
0 0 17 3 1 #" "
0 0 17 3 7 #"defined"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 2 #"an"
0 0 17 3 1 #" "
0 0 17 3 7 #"integer"
0 0 17 3 1 #" "
0 0 17 3 6 #"set\"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"make-list-of-ranges"
0 0 24 3 1 #" "
0 0 14 3 6 #"ranges"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 28 3 3 #"#,@"
0 0 24 3 1 #"("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 14 3 5 #"range"
0 0 24 3 1 #" "
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 9 #"range-low"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #") "
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 10 #"range-high"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 4 #"))) "
0 0 14 3 6 #"ranges"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 2 #" ("
0 0 15 3 18 #"define-integer-set"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-parse"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 8 #"ident:id"
0 0 24 3 1 #" "
0 0 14 3 7 #"r:Range"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 1 #" "
0 0 14 3 5 #"ident"
0 0 24 3 1 #" "
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 19 #"make-list-of-ranges"
0 0 24 3 2 #" ("
0 0 14 3 7 #"append*"
0 0 24 3 2 #" ("
0 0 14 3 9 #"attribute"
0 0 24 3 1 #" "
0 0 14 3 5 #"r.ast"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 14 3 5 #"in-ra"
0 0 14 3 3 #"nge"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-syntax"
0 0 24 3 2 #" ("
0 0 14 3 27 #"integer-ranges-predicate-v5"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 12 #"syntax-parse"
0 0 24 3 1 #" "
0 0 14 3 3 #"stx"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 7 #"r:Range"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 21 3 2 #"#`"
0 0 24 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 2 #"#,"
0 0 24 3 1 #"("
0 0 14 3 11 #"code-gen-v4"
0 0 24 3 2 #" ("
0 0 14 3 7 #"append*"
0 0 24 3 2 #" ("
0 0 14 3 9 #"attribute"
0 0 24 3 1 #" "
0 0 14 3 5 #"r.ast"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#'"
0 0 14 3 1 #"x"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Examples:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-integer-set"
0 0 24 3 1 #" "
0 0 14 3 11 #"ascii-alpha"
0 0 24 3 2 #" ["
0 0 21 3 2 #"65"
0 0 24 3 1 #" "
0 0 21 3 2 #"90"
0 0 24 3 3 #"] ["
0 0 21 3 2 #"97"
0 0 24 3 1 #" "
0 0 21 3 3 #"122"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 18 #"define-integer-set"
0 0 24 3 1 #" "
0 0 14 3 12 #"ascii-alpha2"
0 0 24 3 2 #" ["
0 0 21 3 2 #"48"
0 0 24 3 1 #" "
0 0 21 3 2 #"57"
0 0 24 3 2 #"] "
0 0 14 3 11 #"ascii-alpha"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 18 #"ascii-alphanum-v2?"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 27 #"integer-ranges-predicate-v5"
0 0 24 3 1 #" "
0 0 14 3 12 #"ascii-alpha2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 6 #"define"
0 0 17 3 23 #" ascii-alphanum-v2-bad?"
0 0 24 29 1 #"\n"
0 0 17 3 4 #";  ("
0 0 17 3 27 #"integer-ranges-predicate-v5"
0 0 17 3 2 #" ["
0 0 17 3 2 #"48"
0 0 17 3 1 #" "
0 0 17 3 2 #"57"
0 0 17 3 2 #"] "
0 0 17 3 16 #"ascii-alphanum))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 8 #"in-range"
0 0 24 3 1 #" "
0 0 21 3 3 #"128"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ascii-alphanum-v2?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 16 #"char-alphabetic?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"char-numeric?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"integer->char"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
